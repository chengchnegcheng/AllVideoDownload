version: '3.8'

services:
  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: avd-backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - DEBUG=false
      - DATABASE_URL=sqlite:///data/avd.db
      - REDIS_URL=redis://redis:6379/0
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - avd-network

  # 前端Web服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: avd-frontend
    ports:
      - "3001:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - avd-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: avd-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - avd-network

  # Nginx反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: avd-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./data/downloads:/var/www/downloads
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - avd-network
    profiles:
      - production

  # 数据库服务 (可选，使用MySQL)
  mysql:
    image: mysql:8.0
    container_name: avd-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=avd_root_password
      - MYSQL_DATABASE=avd_web
      - MYSQL_USER=avd_user
      - MYSQL_PASSWORD=avd_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - avd-network
    profiles:
      - mysql

volumes:
  redis_data:
    driver: local
  mysql_data:
    driver: local

networks:
  avd-network:
    driver: bridge

# 开发环境配置
x-dev-environment: &dev-environment
  DEBUG: "true"
  LOG_LEVEL: "DEBUG"
  RELOAD: "true"

# 生产环境配置  
x-prod-environment: &prod-environment
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  RELOAD: "false" 